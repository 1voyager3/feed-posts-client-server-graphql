{"ast":null,"code":"import _classCallCheck from \"/Users/voyager-imac/WebstormProjects/rest-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/voyager-imac/WebstormProjects/rest-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/voyager-imac/WebstormProjects/rest-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/voyager-imac/WebstormProjects/rest-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/voyager-imac/WebstormProjects/rest-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/voyager-imac/WebstormProjects/rest-api/client/src/pages/Feed/SinglePost/SinglePost.js\";\nimport React, { Component } from 'react';\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nvar SinglePost = /*#__PURE__*/function (_Component) {\n  _inherits(SinglePost, _Component);\n\n  function SinglePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SinglePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SinglePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      author: '',\n      date: '',\n      image: '',\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(SinglePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var postId = this.props.match.params.postId;\n      var graphqlQuery = {\n        query: \"\\n        query FetchSinglePost($postId: ID!) {\\n        post( id: $postId ) {\\n            title\\n            content\\n            imageUrl\\n            creator {\\n                name  \\n            }\\n            createdAt\\n        }\\n        }\\n      \",\n        variables: {\n          postId: postId\n        }\n      };\n      fetch(\"http://localhost:8080/graphql\", {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors) {\n          throw new Error('Fetching post failed!');\n        }\n\n        console.log(resData.data.post.imageUrl);\n\n        _this2.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          image: \"http://localhost:8080/\".concat(resData.data.post.imageUrl),\n          date: new Date(resData.data.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.data.post.content\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"single-post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, \"Created by \", this.state.author, \" on \", this.state.date), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"single-post__image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        contain: true,\n        imageUrl: this.state.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, this.state.content));\n    }\n  }]);\n\n  return SinglePost;\n}(Component);\n\nexport default SinglePost;","map":{"version":3,"sources":["/Users/voyager-imac/WebstormProjects/rest-api/client/src/pages/Feed/SinglePost/SinglePost.js"],"names":["React","Component","Image","SinglePost","state","title","author","date","image","content","postId","props","match","params","graphqlQuery","query","variables","fetch","method","headers","Authorization","token","body","JSON","stringify","then","res","json","resData","errors","Error","console","log","data","post","imageUrl","setState","creator","name","Date","createdAt","toLocaleDateString","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount () {\n    const postId = this.props.match.params.postId;\n\n    let graphqlQuery = {\n      query: `\n        query FetchSinglePost($postId: ID!) {\n        post( id: $postId ) {\n            title\n            content\n            imageUrl\n            creator {\n                name  \n            }\n            createdAt\n        }\n        }\n      `,\n      variables: {\n        postId: postId\n      }\n    };\n\n    fetch(`http://localhost:8080/graphql`, {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n        .then(res => {\n\n          return res.json();\n\n        })\n        .then(resData => {\n\n          if (resData.errors) {\n            throw new Error('Fetching post failed!');\n          }\n\n          console.log(resData.data.post.imageUrl);\n\n          this.setState({\n            title: resData.data.post.title,\n            author: resData.data.post.creator.name,\n            image: `http://localhost:8080/${resData.data.post.imageUrl}`,\n            date: new Date(resData.data.post.createdAt).toLocaleDateString('en-US'),\n            content: resData.data.post.content\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  }\n\n  render () {\n    return (\n        <section className=\"single-post\">\n          <h1>{this.state.title}</h1>\n          <h2>\n            Created by {this.state.author} on {this.state.date}\n          </h2>\n          <div className=\"single-post__image\">\n            <Image contain imageUrl={this.state.image}/>\n          </div>\n          <p>{this.state.content}</p>\n        </section>\n    );\n  }\n}\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}